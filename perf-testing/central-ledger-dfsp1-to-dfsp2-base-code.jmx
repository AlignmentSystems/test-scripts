<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group for SPSP Transaction" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">150</stringProp>
        <stringProp name="ThreadGroup.ramp_time"></stringProp>
        <longProp name="ThreadGroup.start_time">1474143365000</longProp>
        <longProp name="ThreadGroup.end_time">1474143365000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="ledgerTestDataSet" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">data/dfsp1-to-dfsp2-new.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames"></stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
        </CSVDataSet>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="95504818">dfsp1</stringProp>
            <stringProp name="3446913">port</stringProp>
            <stringProp name="-294460212">uniqueId</stringProp>
            <stringProp name="95504819">dfsp2</stringProp>
            <stringProp name="1562089070">sourceAmountDefault</stringProp>
            <stringProp name="1544027483">destinationAmountDefault</stringProp>
            <stringProp name="-1185067869">dfsp1-dir-auth</stringProp>
            <stringProp name="-1381581374">dfsp2-dir-auth</stringProp>
            <stringProp name="-1624156417">sourceExpiryDurationDefault</stringProp>
            <stringProp name="103145323">local</stringProp>
            <stringProp name="328850228">central-ledger-host</stringProp>
            <stringProp name="329088525">central-ledger-port</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1494861068">
              <stringProp name="-2048632509">ec2-54-241-147-147.us-west-1.compute.amazonaws.com</stringProp>
              <stringProp name="1716216">8088</stringProp>
              <stringProp name="187832203">${__UUID}</stringProp>
              <stringProp name="327485280">ec2-54-183-226-134.us-west-1.compute.amazonaws.com</stringProp>
              <stringProp name="50">2</stringProp>
              <stringProp name="50">2</stringProp>
              <stringProp name="-2029956087">Basic VGhlIGZpcnN0IERGU1A6VGhlIGZpcnN0IERGU1A=</stringProp>
              <stringProp name="-340426260">Basic VGhlIHNlY29uZCBERlNQOlRoZSBzZWNvbmQgREZTUA==</stringProp>
              <stringProp name="52">4</stringProp>
              <stringProp name="-1204607085">localhost</stringProp>
              <stringProp name="-1507740662">a02bcb8d21d2d11e8ada0027eebfb29a-160662342.eu-west-2.elb.amazonaws.com</stringProp>
              <stringProp name="1567005">3000</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">if (vars.get(“senderDFSP”).equals(“dfsp1”)) {
    vars.put(“dfsp_host_var”, “${dfsp1}“);
} else {
    vars.put(“dfsp_host_var”, “${dfsp2}“);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="prepare-payment-test" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;http://${central-ledger-host}:${central-ledger-port}/transfers/${uniqueId}&quot;,&#xd;
    &quot;ledger&quot;: &quot;http://${central-ledger-host}:${central-ledger-port}&quot;,&#xd;
    &quot;debits&quot;: [{&#xd;
      &quot;account&quot;: &quot;http://${central-ledger-host}:${central-ledger-port}/accounts/10&quot;,&#xd;
      &quot;amount&quot;: &quot;50&quot;,&#xd;
      &quot;memo&quot;: {&#xd;
        &quot;interledger&quot;: &quot;blah&quot;,&#xd;
        &quot;path&quot;: &quot;blah&quot;&#xd;
      }&#xd;
    }],&#xd;
    &quot;credits&quot;: [{&#xd;
      &quot;account&quot;: &quot;http://${central-ledger-host}:${central-ledger-port}/accounts/20&quot;,&#xd;
      &quot;amount&quot;: &quot;50&quot;,&#xd;
      &quot;memo&quot;: {&#xd;
        &quot;interledger&quot;: &quot;blah&quot;,&#xd;
        &quot;path&quot;: &quot;blah&quot;&#xd;
      }&#xd;
    }],&#xd;
    &quot;execution_condition&quot;: &quot;ni:///sha-256;47DEQpj8HBSa-_TImW-5JCeuQeRkm5NMpJWZG3hSuFU?fpt=preimage-sha-256&amp;cost=0&quot;,&#xd;
    &quot;expires_at&quot;: &quot;2018-03-30T00:00:01.000Z&quot;&#xd;
  }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${central-ledger-host}</stringProp>
          <stringProp name="HTTPSampler.port">${central-ledger-port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/transfers/${uniqueId}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">get transfer</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">L1p-Trace-Id</stringProp>
                <stringProp name="Header.value">${paymentId}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="statusTest-prepared" enabled="true">
            <stringProp name="JSON_PATH">$.state</stringProp>
            <stringProp name="EXPECTED_VALUE">prepared</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="dfsp payment prepare" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;http://${dfsp1}:8088/ilp/ledger/v1/transfers/${uniqueId}&quot;,&#xd;
	&quot;ledger&quot;: &quot;http://ec2-35-166-180-190.us-west-2.compute.amazonaws.com:8088/ilp/ledger/v1&quot;,&#xd;
	&quot;debits&quot;: [&#xd;
		{&#xd;
			&quot;account&quot;: &quot;http://${dfsp1}:8088/ilp/ledger/v1/accounts/${senderAccountName}&quot;,&#xd;
			&quot;amount&quot;: &quot;2.00&quot;,&#xd;
			&quot;authorized&quot;: true&#xd;
		}&#xd;
	],&#xd;
	&quot;credits&quot;: [&#xd;
		{&#xd;
			&quot;account&quot;: &quot;http://${dfsp1}:8088/ilp/ledger/v1/accounts/dfsp1-testconnector&quot;,&#xd;
			&quot;amount&quot;: &quot;2.00&quot;,&#xd;
			&quot;memo&quot;: {&#xd;
				&quot;ilp_header&quot;: {&#xd;
					&quot;account&quot;: &quot;levelone.dfsp2.alice.~psk.gzwWYHiiYaM.9PIWsRI5emtRo9SMe_eOkA.9806f14f-0904-4a8b-bd83-bb6ae343a0f4&quot;,&#xd;
					&quot;amount&quot;: &quot;2.00&quot;,&#xd;
					&quot;data&quot;: {&#xd;
						&quot;data&quot;: {&#xd;
							&quot;blob&quot;: &quot;VqjJCBrbNzEqs0nIbxALeMgQ-RcRoUc0d2arknOHMsyjUDApB2_UotwXg_t6jPw970vAdwsFOwWT0hRE0qi_hC5VSmgJSmeixPL7Uyz29UpNe3mbp7OTzX4U1QLXv_YTqUW9pQtp6ltflZK3dQF26NXtCgpUwvAy8TPBL2mKcLK3u2ELMtXHLGw&quot;&#xd;
						},&#xd;
						&quot;expires_at&quot;: &quot;2017-03-01T02:09:05.477Z&quot;&#xd;
					}&#xd;
				}&#xd;
			}&#xd;
		}&#xd;
	],&#xd;
	&quot;execution_condition&quot;: &quot;cc:0:3:0rR08zisf17NJgx-ruvmymLADPkYbT1Tf5Qs8no_zKk:32&quot;,&#xd;
	&quot;expires_at&quot;: &quot;2017-03-01T02:09:05.477Z&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${dfsp1}</stringProp>
          <stringProp name="HTTPSampler.port">8014</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ledger/transfers/${uniqueId}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">get transfer</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="statusTest-executed" enabled="true">
            <stringProp name="JSON_PATH">$.state</stringProp>
            <stringProp name="EXPECTED_VALUE">prepared</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
